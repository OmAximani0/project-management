# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to GH Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - master
      # - gh-pages

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v1
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: './website/build'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@main


# .github/workflows/deploy.yml

# name: GitHub Pages

# on:
#   push:
#     branches:
#       - master
#       - gh-pages
#     paths:
#       - '.github/workflows/deploy.yml'
#       - 'website/**'
#   pull_request:

# jobs:
#   deploy:
#     runs-on: ubuntu-20.04
#     permissions:
#       contents: write
#     concurrency:
#       group: ${{ github.workflow }}-${{ github.ref }}
#     defaults:
#       run:
#         working-directory: website
#     steps:
#       - uses: actions/checkout@v3

#       - name: Setup Node
#         uses: actions/setup-node@v3
#         with:
#           node-version: '16'

#       - name: Get npm cache directory
#         id: npm-cache-dir
#         run: |
#          echo "::set-output name=dir::$(npm config get cache)"
#       - uses: actions/cache@v3
#         id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
#         with:
#           path: ${{ steps.npm-cache-dir.outputs.dir }}
#           key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
#           restore-keys: |
#             ${{ runner.os }}-node-

#       - run: npm install --frozen-lockfile
#       - run: npm run build

#       - name: Deploy
#         uses: peaceiris/actions-gh-pages@v3
#         # if: ${{ github.ref == 'refs/heads/main' }}
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           publish_dir: ./website/build